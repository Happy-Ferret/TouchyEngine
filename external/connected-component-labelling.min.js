function cclb(){"use strict";function AssertException(message){this.message=message}AssertException.prototype.toString=function(){return"AssertException: "+this.message};function assert(exp,message){if(!exp){throw new AssertException(message)}}console.log2D=function(data,w,h){var offset=0;var line="";for(var x=0;x<w;x++){var xx=(x<10?" ":"")+x;line+=xx+","}console.log("   "+line);for(var y=0;y<h;y++){line="";for(var x=0;x<w;x++){var d=data[offset].toFixed();if(d.length<2)d=" "+d;line+=d+",";offset++}var yy=(y<10?" ":"")+y;console.log(yy+" "+line)}};function memset(arraytoset,offset,length,value){for(var i=0;i<length;i++){arraytoset[offset++]=value}return arraytoset}Array.max=function(array){var max=Number.MIN_VALUE;for(var i=array.length;i>=0;i--)if(array[i]>max)max=array[i];return max};Array.min=function(array){};function BlobExtraction(data,w,h){var max=w*h;var BACKGROUND=255;var FOREGROUND=0;var UNSET=0;var MARKED=-1;var pos=[1,w+1,w,w-1,-1,-w-1,-w,-w+1];var label=new Array;var c=1;data=memset(data,0,w,BACKGROUND);data=memset(data,w*(h-1),w,BACKGROUND);for(var y=1;y<h-1;y++){var offset=y*w;data[offset]=BACKGROUND;data[offset+w-1]=BACKGROUND}label=memset(label,0,max,UNSET);var tracer=function(S,p){for(var d=0;d<8;d++){var q=(p+d)%8;var T=S+pos[q];if(T<0||T>=max)continue;if(data[T]!=BACKGROUND)return{T:T,q:q};assert(label[T]<=UNSET);label[T]=MARKED}return{T:S,q:-1}};var contourTracing=function(S,C,external){var p=external?7:3;var tmp=tracer(S,p);var T2=tmp.T;var q=tmp.q;label[S]=C;if(T2==S)return;var counter=0;var Tnext=T2;var T=T2;while(T!=S||Tnext!=T2){assert(counter++<max,"Looped too many times!");label[Tnext]=C;T=Tnext;p=(q+5)%8;tmp=tracer(T,p);Tnext=tmp.T;q=tmp.q}};var extract=function(){var y=1;do{var x=0;do{var offset=y*w+x;if(data[offset]==BACKGROUND)continue;var traced=false;if(data[offset-w]==BACKGROUND&&label[offset]==UNSET){contourTracing(offset,c,true);c++;traced=true}if(data[offset+w]==BACKGROUND&&label[offset+w]==UNSET){var n=label[offset-1];if(label[offset]!=UNSET)n=label[offset];assert(n>UNSET,"Step 2: N must be set, ("+x+","+y+") "+n+" "+data[offset-1]);contourTracing(offset,n,false);traced=true}if(label[offset]==UNSET){var n=label[offset-1];assert(!traced,"Step 3: We have traced, but not set the label");assert(n>UNSET,"Step 3: N must be set, ("+x+","+y+") "+n);label[offset]=n}}while(x++<w)}while(y++<h-1);return label};return extract()}function BlobBounds(label,width,height){var blob=[];var offset=0;for(var y=0;y<height;y++){for(var x=0;x<width;x++){var l=label[offset++];if(l<=0)continue;if(l in blob){var b=blob[l];if(b.x2<x)b.x2=x;if(b.x1>x)b.x1=x;b.y2=y}else{blob[l]={l:l,x1:x,y1:y,x2:x,y2:y}}}}blob[0]={l:0,x1:0,y1:0,x2:0,y2:0,area:0};for(var i=1;i<blob.length;i++){var b=blob[i];b.area=(b.x2-b.x1+1)*(b.y2-b.y1+1)}return blob}function BlobColouring(dest,width,height,labels){var max=width*height;var colors=[];var maxcolors=Array.max(labels);var maxcolors2=maxcolors/2;for(var i=0;i<=maxcolors;i++){var r=i<=maxcolors2?1-i/maxcolors2:0;var g=i<=maxcolors2?i/maxcolors2:1-(i-maxcolors2)/maxcolors2;var b=i<=maxcolors2?0:(i-maxcolors2)/maxcolors2;colors[i]=[r*255,g*255,b*255]}var offset=max-1;var destOffset=offset*4;do{var l=labels[offset];var color=l>0?colors[l]:[0,0,0];dest[destOffset]=color[0];dest[destOffset+1]=color[1];dest[destOffset+2]=color[2];dest[destOffset+3]=255;destOffset-=4}while(offset--)}this.eBlobColouring=function(dest,width,height,labels){return BlobColouring(dest,width,height,labels)};this.eBlobExtraction=function(data,w,h){return BlobExtraction(data,w,h)};this.eBlobBounds=function(data,w,h){return BlobBounds(data,w,h)}}